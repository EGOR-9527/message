{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\mymessange\\\\client\\\\src\\\\components\\\\page-component\\\\myChat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChat = () => {\n  _s();\n  // Объявление функционального компонента MyChat\n  const [messages, setMessages] = useState([]); // Состояние для списка всех сообщений\n\n  const handleSendMessage = () => {\n    const newMessage = document.getElementById('new-message').value; // Получение текста нового сообщения из поля ввода\n    setMessages([...messages, newMessage]); // Добавление нового сообщения в список\n    document.getElementById('new-message').value = ''; // Очистка поля ввода после отправки сообщения\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MyChat\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-messages\",\n      children: [\" \", messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this) // Отображение каждого сообщения из списка\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-write\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"new-message\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(MyChat, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = MyChat;\nexport default MyChat; // Экспорт компонента MyChat для использования в других частях приложения\nvar _c;\n$RefreshReg$(_c, \"MyChat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyChat","_s","messages","setMessages","handleSendMessage","newMessage","document","getElementById","value","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/mymessange/client/src/components/page-component/myChat.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst MyChat = () => { // Объявление функционального компонента MyChat\r\n    const [messages, setMessages] = useState([]); // Состояние для списка всех сообщений\r\n\r\n    const handleSendMessage = () => {\r\n        const newMessage = document.getElementById('new-message').value; // Получение текста нового сообщения из поля ввода\r\n        setMessages([...messages, newMessage]); // Добавление нового сообщения в список\r\n        document.getElementById('new-message').value = ''; // Очистка поля ввода после отправки сообщения\r\n    };\r\n\r\n    return (\r\n        <div className='MyChat'> {/* Создание главного блока чата */}\r\n            <div className=\"block-messages\"> {/* Блок для отображения всех сообщений */}\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className=\"message\">{msg}</div> // Отображение каждого сообщения из списка\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"block-write\"> {/* Блок для написания нового сообщения */}\r\n                <input id=\"new-message\" type=\"text\" /> {/* Поле ввода текста нового сообщения */}\r\n                <button onClick={handleSendMessage}>Отправить</button> {/* Кнопка для отправки сообщения */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyChat; // Экспорт компонента MyChat для использования в других частях приложения"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAE;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC,CAAC;IACjEL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,UAAU,CAAC,CAAC,CAAC,CAAC;IACxCC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK,GAAG,EAAE,CAAC,CAAC;EACvD,CAAC;EAED,oBACIT,OAAA;IAAKU,SAAS,EAAC,QAAQ;IAAAC,QAAA,GAAC,GAAC,eACrBX,OAAA;MAAKU,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAAC,GAAC,EAC5BR,QAAQ,CAACS,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBd,OAAA;QAAiBU,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEE;MAAG,GAA/BC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAAC,CAAC;MACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENlB,OAAA;MAAKU,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,GAAC,eAC1BX,OAAA;QAAOmB,EAAE,EAAC,aAAa;QAACC,IAAI,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eACvClB,OAAA;QAAQqB,OAAO,EAAEhB,iBAAkB;QAAAM,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CAvBID,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAyBZ,eAAeA,MAAM,CAAC,CAAC;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}