{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\mymessange\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Подключение необходимых библиотек\nimport axios from 'axios'; // Подключение axios для работы с HTTP-запросами\nimport socketIOClient from 'socket.io-client'; // Подключение socket.io-client для использования WebSocket\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketIOClient('http://localhost:3000'); // Подключение к серверу WebSocket\n\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]); // Состояние для хранения сообщений\n  const [newMessage, setNewMessage] = useState(''); // Состояние для нового сообщения\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/messages') // HTTP-запрос к серверу за сообщениями\n    .then(response => {\n      setMessages(response.data); // Обновление состояния сообщений\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('newMessage', message => {\n      setMessages([...messages, message]); // Добавление нового сообщения при получении через WebSocket\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    socket.emit('sendMessage', newMessage); // Отправка сообщения через WebSocket\n    setNewMessage(''); // Очистка поля ввода после отправки\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0427\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) // Вывод сообщений из состояния\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FmToBdnLeZixAusu3LUthW1MWLk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","socketIOClient","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","newMessage","setNewMessage","get","then","response","data","catch","error","console","on","message","handleSendMessage","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/mymessange/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Подключение необходимых библиотек\nimport axios from 'axios'; // Подключение axios для работы с HTTP-запросами\nimport socketIOClient from 'socket.io-client'; // Подключение socket.io-client для использования WebSocket\n\nconst socket = socketIOClient('http://localhost:3000'); // Подключение к серверу WebSocket\n\nfunction App() {\n  const [messages, setMessages] = useState([]); // Состояние для хранения сообщений\n  const [newMessage, setNewMessage] = useState(''); // Состояние для нового сообщения\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/messages') // HTTP-запрос к серверу за сообщениями\n      .then(response => {\n        setMessages(response.data); // Обновление состояния сообщений\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    socket.on('newMessage', (message) => {\n      setMessages([...messages, message]); // Добавление нового сообщения при получении через WebSocket\n    });\n  }, [messages]);\n\n  const handleSendMessage = () => {\n    socket.emit('sendMessage', newMessage); // Отправка сообщения через WebSocket\n    setNewMessage(''); // Очистка поля ввода после отправки\n  };\n\n  return (\n    <div>\n      <h1>Чат</h1>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>{message}</li> // Вывод сообщений из состояния\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        value={newMessage}\n        onChange={(e) => setNewMessage(e.target.value)}\n        placeholder=\"Введите сообщение\"\n      />\n      <button onClick={handleSendMessage}>Отправить</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AACpD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGH,cAAc,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAExD,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACW,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAAA,CACzCC,IAAI,CAACC,QAAQ,IAAI;MAChBL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACdK,MAAM,CAACc,EAAE,CAAC,YAAY,EAAGC,OAAO,IAAK;MACnCX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEY,OAAO,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EAEd,MAAMa,iBAAiB,GAAGA,CAAA,KAAM;IAC9BhB,MAAM,CAACiB,IAAI,CAAC,aAAa,EAAEZ,UAAU,CAAC,CAAC,CAAC;IACxCC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACEP,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZvB,OAAA;MAAAmB,QAAA,EACGf,QAAQ,CAACoB,GAAG,CAAC,CAACR,OAAO,EAAES,KAAK,kBAC3BzB,OAAA;QAAAmB,QAAA,EAAiBH;MAAO,GAAfS,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,CAAC;MAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLvB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErB,UAAW;MAClBsB,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAmB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFvB,OAAA;MAAQgC,OAAO,EAAEf,iBAAkB;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACpB,EAAA,CA1CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}