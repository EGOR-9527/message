{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\mymessange\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketIOClient('http://localhost:3000');\nfunction App() {\n  const connect = () => {\n    socket('http://localhost:5000');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0427\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","socketIOClient","jsxDEV","_jsxDEV","socket","App","connect","children","fileName","_jsxFileName","lineNumber","columnNumber","messages","map","message","index","type","value","newMessage","onChange","e","setNewMessage","target","placeholder","onClick","handleSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/mymessange/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\n\nconst socket = socketIOClient('http://localhost:3000');\n\nfunction App() {\n\n  const connect= () => {\n    socket('http://localhost:5000')\n  }\n\n  return (\n    <div>\n      <h1>Чат</h1>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        value={newMessage}\n        onChange={(e) => setNewMessage(e.target.value)}\n        placeholder=\"Введите сообщение\"\n      />\n      <button onClick={handleSendMessage}>Отправить</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGH,cAAc,CAAC,uBAAuB,CAAC;AAEtD,SAASI,GAAGA,CAAA,EAAG;EAEb,MAAMC,OAAO,GAAEA,CAAA,KAAM;IACnBF,MAAM,CAAC,uBAAuB,CAAC;EACjC,CAAC;EAED,oBACED,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZR,OAAA;MAAAI,QAAA,EACGK,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BZ,OAAA;QAAAI,QAAA,EAAiBO;MAAO,GAAfC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLR,OAAA;MACEa,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEC,UAAW;MAClBC,QAAQ,EAAGC,CAAC,IAAKC,aAAa,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;MAC/CM,WAAW,EAAC;IAAmB;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFR,OAAA;MAAQqB,OAAO,EAAEC,iBAAkB;MAAAlB,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACe,EAAA,GAvBQrB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}