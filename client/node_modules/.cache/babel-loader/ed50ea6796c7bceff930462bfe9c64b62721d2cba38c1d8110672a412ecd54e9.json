{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\mymessange\\\\client\\\\src\\\\components\\\\myPageMessag.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport socketIOClient from \"socket.io-client\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport \"../style/MainPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketIOClient(\"http://localhost:7000\");\nconst MyPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [dataMessage, setDataMessage] = useState([]);\n  const [textSearch, setTextSearch] = useState(\"\");\n  const [visible, setVisible] = useState(true);\n  const [newUser, setNewUser] = useState([]);\n  const [friendsData, setFriendsData] = useState([]);\n  const [friendId, setFriendId] = useState(\"\");\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  const [friendsLoaded, setFriendsLoaded] = useState(false);\n  const location = useLocation();\n  const search = location.search;\n  const token = localStorage.getItem(\"refreshToken\");\n  const navigate = useNavigate();\n  const handleMessage = event => {\n    setMessage(event.target.value);\n  };\n  useEffect(() => {\n    const searchParams = new URLSearchParams(search);\n    const authToken = searchParams.get(\"authToken\");\n    if (authToken) {\n      // Выполнить запрос на сервер для проверки аутентификации пользователя\n      axios.post(\"http://localhost:7000/api/check-auth\", {\n        authToken\n      }).then(response => {\n        const userId = response.data.userId;\n        if (userId) {\n          // Перенаправление на страницу пользователя\n          navigate(`/user/${userId}`);\n        } else {\n          console.error(\"Ошибка: Не удалось получить идентификатор пользователя.\");\n        }\n      }).catch(error => {\n        console.error(\"Ошибка при проверке аутентификации пользователя:\", error);\n      });\n    }\n  }, [search, navigate]);\n  const sendMess = () => {\n    const data = {\n      messData: message\n    };\n    setDataMessage([...dataMessage, data]);\n    console.log(friendId);\n    socket.emit(\"message\", {\n      userId: \"userId\",\n      friendId: friendId,\n      message: message\n    });\n    setMessage(\" \"); // Очистка текста в поле ввода после отправки сообщения\n  };\n  const openChat = async friend => {\n    setFriendId(friend.userId);\n    const friendId = friend.userId;\n    console.log(friendId);\n    socket.on(\"receiveMessage\", data => {\n      // Обработчик события приема сообщения\n      setReceivedMessages([...receivedMessages, data]); // Добавление принятого сообщения в список\n    });\n    console.log(receivedMessages);\n    try {\n      const messageData = await axios.post(\"http://localhost:7000/api/get-messange\", {\n        friendId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(messageData.data);\n    } catch (error) {\n      console.log(error);\n    }\n    return () => {\n      socket.off(\"receiveMessage\");\n    };\n  };\n  const handleVisible = () => {\n    setVisible(true);\n  };\n  const handleHide = () => {\n    setVisible(false);\n  };\n  const saveUser = async friendId => {\n    try {\n      console.log(\"usr:\", friendId);\n      await axios.post(\"http://localhost:7000/api/save-chats\", {\n        friendId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSearchUser = async () => {\n    if (!textSearch || Array.isArray(newUser) && newUser.some(user => user.userName === textSearch)) {\n      return;\n    }\n    try {\n      const dataUser = await axios.get(\"http:// localhost:7000/api/search-user\", {\n        params: {\n          name: textSearch\n        },\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const currentDate = new Date();\n      const dataNewUser = {\n        userName: dataUser.data.userName,\n        userId: dataUser.data.userId,\n        isOnline: currentDate.toLocaleDateString() + \" \" + currentDate.toLocaleTimeString()\n      };\n      setNewUser([...newUser, dataNewUser]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    if (typeof friendsLoaded === \"boolean\" && !friendsLoaded) {\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(\"http://localhost:7000/api/get-frend\", {\n            token\n          });\n          if (response.data && typeof response.data === \"object\" && response.data.myFriends) {\n            const myFriends = response.data.myFriends;\n            const updatedFriends = myFriends.map(friend => ({\n              userName: friend.userName,\n              userId: friend.userId\n            }));\n            setFriendsData(updatedFriends);\n            setFriendsLoaded(true);\n          } else {\n            console.error(\"No friends found\");\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      fetchData();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-my-chats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatsUsers\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVisible,\n        className: \"backSvg\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: handleHide,\n          onChange: e => setTextSearch(e.target.value),\n          className: \"inp-search\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getSearchUser,\n          className: \"but-search\",\n          children: \"\\u041D\\u0430\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: friendsData.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openChat(friend),\n          className: \"block-chat\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-chat\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"name-user\",\n              children: friend.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: newUser.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-chat\",\n          onClick: () => saveUser(chat.userId),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-chat\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"name-user\",\n              children: chat.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"activ\",\n              children: \"online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"activ\",\n              children: chat.isOnline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)\n        }, chat.userId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MyChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"myName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-friend-mess\",\n        children: \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0442sadfsdfsdf sdfsdfsdf sdfsdfsdf sdfsdfsdfsd sdfsdfsdfsd sdfsdfsdf sdfsdfsdt dsfsdf sde4wahdegdfashrerhyaerhaerhaerhaert sde4wahdegdfashrerhyaer haerhaerta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), dataMessage.map((mess, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-my-mess\",\n        children: mess.messData\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-write\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"messageInput\",\n          onChange: handleMessage,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMess,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPage, \"Gu747ciFF4WvjLB5TQuoIXaYUx4=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","socketIOClient","useLocation","useNavigate","useParams","jsxDEV","_jsxDEV","socket","MyPage","_s","id","message","setMessage","dataMessage","setDataMessage","textSearch","setTextSearch","visible","setVisible","newUser","setNewUser","friendsData","setFriendsData","friendId","setFriendId","receivedMessages","setReceivedMessages","friendsLoaded","setFriendsLoaded","location","search","token","localStorage","getItem","navigate","handleMessage","event","target","value","searchParams","URLSearchParams","authToken","get","post","then","response","userId","data","console","error","catch","sendMess","messData","log","emit","openChat","friend","on","messageData","headers","Authorization","off","handleVisible","handleHide","saveUser","getSearchUser","Array","isArray","some","user","userName","dataUser","params","name","currentDate","Date","dataNewUser","isOnline","toLocaleDateString","toLocaleTimeString","e","fetchData","myFriends","updatedFriends","map","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","index","chat","mess","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/mymessange/client/src/components/myPageMessag.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport \"../style/MainPage.css\";\r\n\r\nconst socket = socketIOClient(\"http://localhost:7000\");\r\n\r\nconst MyPage = () => {\r\n  const { id } = useParams();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [dataMessage, setDataMessage] = useState([]);\r\n  const [textSearch, setTextSearch] = useState(\"\");\r\n  const [visible, setVisible] = useState(true);\r\n  const [newUser, setNewUser] = useState([]);\r\n  const [friendsData, setFriendsData] = useState([]);\r\n  const [friendId, setFriendId] = useState(\"\");\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n  const [friendsLoaded, setFriendsLoaded] = useState(false);\r\n  const location = useLocation();\r\n  const search = location.search;\r\n  const token = localStorage.getItem(\"refreshToken\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleMessage = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(search);\r\n    const authToken = searchParams.get(\"authToken\");\r\n\r\n    if (authToken) {\r\n      // Выполнить запрос на сервер для проверки аутентификации пользователя\r\n      axios\r\n        .post(\"http://localhost:7000/api/check-auth\", { authToken })\r\n        .then((response) => {\r\n          const userId = response.data.userId;\r\n\r\n          if (userId) {\r\n            // Перенаправление на страницу пользователя\r\n            navigate(`/user/${userId}`);\r\n          } else {\r\n            console.error(\r\n              \"Ошибка: Не удалось получить идентификатор пользователя.\"\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\r\n            \"Ошибка при проверке аутентификации пользователя:\",\r\n            error\r\n          );\r\n        });\r\n    }\r\n  }, [search, navigate]);\r\n\r\n  const sendMess = () => {\r\n    const data = {\r\n      messData: message,\r\n    };\r\n\r\n    setDataMessage([...dataMessage, data]);\r\n\r\n    console.log(friendId);\r\n\r\n    socket.emit(\"message\", {\r\n      userId: \"userId\",\r\n      friendId: friendId,\r\n      message: message,\r\n    });\r\n\r\n    setMessage(\" \"); // Очистка текста в поле ввода после отправки сообщения\r\n  };\r\n\r\n  const openChat = async (friend) => {\r\n    setFriendId(friend.userId);\r\n\r\n    const friendId = friend.userId;\r\n    console.log(friendId);\r\n\r\n    socket.on(\"receiveMessage\", (data) => {\r\n      // Обработчик события приема сообщения\r\n      setReceivedMessages([...receivedMessages, data]); // Добавление принятого сообщения в список\r\n    });\r\n\r\n    console.log(receivedMessages);\r\n\r\n    try {\r\n      const messageData = await axios.post(\r\n        \"http://localhost:7000/api/get-messange\",\r\n        {\r\n          friendId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(messageData.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    return () => {\r\n      socket.off(\"receiveMessage\");\r\n    };\r\n  };\r\n\r\n  const handleVisible = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleHide = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const saveUser = async (friendId) => {\r\n    try {\r\n      console.log(\"usr:\", friendId);\r\n      await axios.post(\r\n        \"http://localhost:7000/api/save-chats\",\r\n        {\r\n          friendId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSearchUser = async () => {\r\n    if (\r\n      !textSearch ||\r\n      (Array.isArray(newUser) &&\r\n        newUser.some((user) => user.userName === textSearch))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const dataUser = await axios.get(\r\n        \"http:// localhost:7000/api/search-user\",\r\n        {\r\n          params: { name: textSearch },\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const currentDate = new Date();\r\n      const dataNewUser = {\r\n        userName: dataUser.data.userName,\r\n        userId: dataUser.data.userId,\r\n        isOnline:\r\n          currentDate.toLocaleDateString() +\r\n          \" \" +\r\n          currentDate.toLocaleTimeString(),\r\n      };\r\n\r\n      setNewUser([...newUser, dataNewUser]);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeof friendsLoaded === \"boolean\" && !friendsLoaded) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            \"http://localhost:7000/api/get-frend\",\r\n            {\r\n              token,\r\n            }\r\n          );\r\n\r\n          if (\r\n            response.data &&\r\n            typeof response.data === \"object\" &&\r\n            response.data.myFriends\r\n          ) {\r\n            const myFriends = response.data.myFriends;\r\n            const updatedFriends = myFriends.map((friend) => ({\r\n              userName: friend.userName,\r\n              userId: friend.userId,\r\n            }));\r\n\r\n            setFriendsData(updatedFriends);\r\n            setFriendsLoaded(true);\r\n          } else {\r\n            console.error(\"No friends found\");\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container-my-chats\">\r\n      <div className=\"chatsUsers\">\r\n        <button onClick={handleVisible} className=\"backSvg\">\r\n          Back\r\n        </button>\r\n\r\n        <div className=\"main-search-container\">\r\n          <input\r\n            onClick={handleHide}\r\n            onChange={(e) => setTextSearch(e.target.value)}\r\n            className=\"inp-search\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={getSearchUser} className=\"but-search\">\r\n            Найти\r\n          </button>\r\n        </div>\r\n\r\n        {visible ? (\r\n          <div className=\"user-list\">\r\n            {friendsData.map((friend, index) => (\r\n              <div\r\n                key={index}\r\n                onClick={() => openChat(friend)}\r\n                className=\"block-chat\"\r\n              >\r\n                <div className=\"info-chat\">\r\n                  <p className=\"name-user\">{friend.userName}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-list\">\r\n            {newUser.map((chat, index) => (\r\n              <div\r\n                key={chat.userId}\r\n                className=\"block-chat\"\r\n                onClick={() => saveUser(chat.userId)}\r\n              >\r\n                <div className=\"info-chat\">\r\n                  <p className=\"name-user\">{chat.userName}</p>\r\n                  <span className=\"activ\">online</span>\r\n                  <span className=\"activ\">{chat.isOnline}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"MyChat\">\r\n        <div className=\"block-name\">\r\n          <h1>{\"myName\"}</h1>\r\n        </div>\r\n\r\n        <div className=\"block-friend-mess\">\r\n          Приветsadfsdfsdf sdfsdfsdf sdfsdfsdf sdfsdfsdfsd sdfsdfsdfsd sdfsdfsdf\r\n          sdfsdfsdt dsfsdf sde4wahdegdfashrerhyaerhaerhaerhaert\r\n          sde4wahdegdfashrerhyaer haerhaerta\r\n        </div>\r\n\r\n        {dataMessage.map((mess, index) => (\r\n          <div key={index} className=\"block-my-mess\">\r\n            {mess.messData}\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"block-write\">\r\n          <input id=\"messageInput\" onChange={handleMessage} type=\"text\" />\r\n          <button onClick={sendMess}>Отправить</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}