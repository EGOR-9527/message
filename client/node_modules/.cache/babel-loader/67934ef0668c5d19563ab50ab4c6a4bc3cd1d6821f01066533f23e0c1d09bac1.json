{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\mymessange\\\\client\\\\src\\\\components\\\\myPageMessag.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport \"../style/MainPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [dataMessage, setDataMessage] = useState([]);\n  const [textSearch, setTextSearch] = useState(\"\");\n  const [visible, setVisible] = useState(true);\n  const [newUser, setNewUser] = useState([]);\n  const [friendsData, setFriendsData] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const socketUrl = \"http://localhost:7000\"; // URL-адрес сервера Socket.IO\n  const socket = io(socketUrl);\n  const handleVisible = () => {\n    setVisible(true);\n  };\n  const handleHide = () => {\n    setVisible(false);\n  };\n  const saveUser = async friendId => {\n    try {\n      console.log(\"usr:\", friendId);\n      await axios.post(\"http://localhost:7000/api/save-chats\", {\n        friendId\n      }, {\n        withCredentials: true\n      }); // Отправка куки автоматически\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSearchUser = async () => {\n    if (!textSearch || newUser.some(user => user.userName === textSearch)) {\n      return;\n    }\n    try {\n      const dataUser = await axios.get(\"http://localhost:7000/api/search-user\", {\n        params: {\n          name: textSearch\n        }\n      });\n      const currentDate = new Date();\n      const dataNewUser = {\n        userName: dataUser.data.userName,\n        userId: dataUser.data.userId,\n        isOnline: currentDate.toLocaleDateString() + \" \" + currentDate.toLocaleTimeString()\n      };\n      setNewUser([...newUser, dataNewUser]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:7000/api/get-frend\", {\n          withCredentials: true\n        });\n        console.log(response.data);\n        const myFriends = response.data.myFriends;\n        const updatedFriends = myFriends.map(friend => ({\n          userName: friend.userName\n        }));\n        setFriendsData(updatedFriends);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    socket.on(\"new-message\", message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n  const SendMessage = () => {\n    const senderId = 1; // замените на идентификатор отправителя\n    const recipientId = 2; // замените на идентификатор получателя\n\n    socket.emit(\"send-message\", {\n      senderId,\n      recipientId,\n      messageText: newMessage\n    });\n    setNewMessage(\"\");\n  };\n  const handleInputChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSendMessage = () => {\n    const data = {\n      messData: message\n    };\n    setDataMessage([...dataMessage, data]);\n    setMessage(\"\"); // Очистка текста в поле ввода после отправки сообщения\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-my-chats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatsUsers\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        onClick: handleVisible,\n        className: \"backSvg\",\n        width: \"60px\",\n        height: \"60px\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: handleHide,\n          onChange: e => setTextSearch(e.target.value),\n          className: \"inp-search\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getSearchUser,\n          className: \"but-search\",\n          children: \"\\u041D\\u0430\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: friendsData.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-chat\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-chat\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"name-user\",\n              children: friend.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: newUser.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-chat\",\n          onClick: () => saveUser(chat.userId),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-chat\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"name-user\",\n              children: chat.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"activ\",\n              children: \"online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"activ\",\n              children: chat.isOnline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)\n        }, chat.userId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 2\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MyChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-friend-mess\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: message.senderId === 1 ? \"block-my-mess\" : \"block-frind-mess\",\n          children: message.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-write\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"messageInput\",\n          onChange: handleInputChange,\n          type: \"text\",\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPage, \"Fao5zRVOfYd6hwOi2o/mVtL4ifY=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","jsxDEV","_jsxDEV","MyPage","_s","message","setMessage","dataMessage","setDataMessage","textSearch","setTextSearch","visible","setVisible","newUser","setNewUser","friendsData","setFriendsData","messages","setMessages","newMessage","setNewMessage","socketUrl","socket","handleVisible","handleHide","saveUser","friendId","console","log","post","withCredentials","error","getSearchUser","some","user","userName","dataUser","get","params","name","currentDate","Date","dataNewUser","data","userId","isOnline","toLocaleDateString","toLocaleTimeString","e","fetchData","response","myFriends","updatedFriends","map","friend","on","prevMessages","SendMessage","senderId","recipientId","emit","messageText","handleInputChange","event","target","value","handleSendMessage","messData","className","children","onClick","width","height","viewBox","fill","xmlns","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","index","chat","content","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/mymessange/client/src/components/myPageMessag.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport \"../style/MainPage.css\";\r\n\r\nconst MyPage = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [dataMessage, setDataMessage] = useState([]);\r\n  const [textSearch, setTextSearch] = useState(\"\");\r\n  const [visible, setVisible] = useState(true);\r\n  const [newUser, setNewUser] = useState([]);\r\n  const [friendsData, setFriendsData] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  const socketUrl = \"http://localhost:7000\"; // URL-адрес сервера Socket.IO\r\n  const socket = io(socketUrl);\r\n\r\n  const handleVisible = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleHide = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const saveUser = async (friendId) => {\r\n    try {\r\n      console.log(\"usr:\", friendId);\r\n      await axios.post(\r\n        \"http://localhost:7000/api/save-chats\",\r\n        {\r\n          friendId,\r\n        },\r\n        { withCredentials: true }\r\n      ); // Отправка куки автоматически\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSearchUser = async () => {\r\n    if (!textSearch || newUser.some((user) => user.userName === textSearch)) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const dataUser = await axios.get(\r\n        \"http://localhost:7000/api/search-user\",\r\n        {\r\n          params: { name: textSearch },\r\n        }\r\n      );\r\n\r\n      const currentDate = new Date();\r\n      const dataNewUser = {\r\n        userName: dataUser.data.userName,\r\n        userId: dataUser.data.userId,\r\n        isOnline:\r\n          currentDate.toLocaleDateString() +\r\n          \" \" +\r\n          currentDate.toLocaleTimeString(),\r\n      };\r\n\r\n      setNewUser([...newUser, dataNewUser]);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:7000/api/get-frend\",\r\n          { withCredentials: true }\r\n        );\r\n        console.log(response.data);\r\n\r\n        const myFriends = response.data.myFriends;\r\n        const updatedFriends = myFriends.map((friend) => ({\r\n          userName: friend.userName,\r\n        }));\r\n\r\n        setFriendsData(updatedFriends);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"new-message\", (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n  }, []);\r\n\r\n  const SendMessage = () => {\r\n    const senderId = 1; // замените на идентификатор отправителя\r\n    const recipientId = 2; // замените на идентификатор получателя\r\n\r\n    socket.emit(\"send-message\", {\r\n      senderId,\r\n      recipientId,\r\n      messageText: newMessage,\r\n    });\r\n\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    const data = {\r\n      messData: message,\r\n    };\r\n\r\n    setDataMessage([...dataMessage, data]);\r\n    setMessage(\"\"); // Очистка текста в поле ввода после отправки сообщения\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-my-chats\">\r\n      <div className=\"chatsUsers\">\r\n        <svg\r\n          onClick={handleVisible}\r\n          className=\"backSvg\"\r\n          width=\"60px\"\r\n          height=\"60px\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          {/* SVG content */}\r\n        </svg>\r\n\r\n        <div className=\"main-search-container\">\r\n          <input\r\n            onClick={handleHide}\r\n            onChange={(e) => setTextSearch(e.target.value)}\r\n            className=\"inp-search\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={getSearchUser} className=\"but-search\">\r\n            Найти\r\n          </button>\r\n        </div>\r\n\r\n        {visible ? (\r\n          <div className=\"user-list\">\r\n            {friendsData.map((friend, index) => (\r\n              <div key={index} className=\"block-chat\">\r\n                <div className=\"info-chat\">\r\n                  <p className=\"name-user\">{friend.userName}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-list\">\r\n            {newUser.map((chat, index) => (\r\n <div\r\n                key={chat.userId}\r\n                className=\"block-chat\"\r\n                onClick={() => saveUser(chat.userId)}\r\n              >\r\n                <div className=\"info-chat\">\r\n                  <p className=\"name-user\">{chat.userName}</p>\r\n                  <span className=\"activ\">online</span>\r\n                  <span className=\"activ\">{chat.isOnline}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"MyChat\">\r\n        <div className=\"block-name\">\r\n          <h1>Name</h1>\r\n        </div>\r\n\r\n        <div className=\"block-friend-mess\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={\r\n                message.senderId === 1 ? \"block-my-mess\" : \"block-frind-mess\"\r\n              }\r\n            >\r\n              {message.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"block-write\">\r\n          <input\r\n            id=\"messageInput\"\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            value={message}\r\n          />\r\n          <button onClick={handleSendMessage}>Отправить</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}